================================================================================
 7. 문서 내장으로 읽기 퍼포먼스 극대화

================================================================================
MongoDB 핵심 - 적절한 내장(denormalize)

처음 부터 자식 내용을 부모에 내장 시키기. 
그러면, 내장 작업 추가가 필요함. 

================================================================================
수정된 faker 적용하기
faker2.js 참고 

설명 코드  참고.


================================================================================
Comment POST API 수정하기

블로그에 _id , 유저, 이름 추가하고, 
후기와 후기 아이디로 같이 추가 할 예정.

1. 모델에 Blog.js 수정.
2. blogRoute.js 1차 테스트 
3. 하나만 포스트맨으로 테스트 
4. post 게시글 하나 등록 테스트, 유저는 콤파스에서 아무 유저 아이디 
가져오기. 
5. 등록 후, 콤파스에서 해당 블로그 오브젝트 아이디로 검사하기. 
ex) 
{_id: ObjectId('63fc2796cd319b68f4bea8f3')}
6. 다른 게시글은 유저에 아이디만 저장이 되어 있음. 


================================================================================
debugging & testing Comment POST API


================================================================================
Blog에 Comment 내장하기


================================================================================
Nesting 성능 테스트


================================================================================
"$" 내장된 특정 문서 수정하기


================================================================================
updateMany


================================================================================
arrayFilter


================================================================================
$pull, $elemMatch


================================================================================
User 삭제하기


================================================================================
스키마 설계
